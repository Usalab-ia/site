name: Website Health Check
description: Monitor usalabia.com health and send Discord alerts on failures

on:
  schedule:
    # Run every Monday at 9:00 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch: # Allow manual trigger

jobs:
  health-check:
    runs-on: ubuntu-latest
    name: Check Website Health
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: npm install axios
        
      - name: Health Check Script
        id: health-check
        run: |
          node -e "
          const axios = require('axios');
          
          const WEBSITE_URL = 'https://usalabia.com';
          const MAX_RETRIES = 3;
          const RETRY_DELAY = 5000; // 5 seconds
          
          async function checkHealth() {
            let lastError = null;
            let lastResponse = null;
            
            for (let attempt = 1; attempt <= MAX_RETRIES; attempt++) {
              try {
                console.log(\`Attempt \${attempt}/\${MAX_RETRIES}: Checking \${WEBSITE_URL}\`);
                
                const response = await axios.get(WEBSITE_URL, {
                  timeout: 10000, // 10 second timeout
                  validateStatus: () => true // Don't throw on any status code
                });
                
                lastResponse = response;
                
                if (response.status === 200) {
                  console.log('‚úÖ Website is healthy! Status:', response.status);
                  process.exit(0);
                } else {
                  console.log(\`‚ö†Ô∏è  Attempt \${attempt}: Got status \${response.status}\`);
                  lastError = \`HTTP \${response.status}\`;
                }
                
              } catch (error) {
                console.log(\`‚ùå Attempt \${attempt}: \${error.message}\`);
                lastError = error.message;
              }
              
              if (attempt < MAX_RETRIES) {
                console.log(\`Waiting \${RETRY_DELAY/1000} seconds before retry...\`);
                await new Promise(resolve => setTimeout(resolve, RETRY_DELAY));
              }
            }
            
            // All attempts failed
            const errorMessage = \`Website health check failed after \${MAX_RETRIES} attempts. Last error: \${lastError}\`;
            console.error(errorMessage);
            
            // Set output for Discord notification
            const statusCode = lastResponse ? lastResponse.status : 'Connection failed';
            console.log(\`::set-output name=status_code::\${statusCode}\`);
            console.log(\`::set-output name=error_message::\${lastError}\`);
            
            process.exit(1);
          }
          
          checkHealth().catch(error => {
            console.error('Script error:', error);
            process.exit(1);
          });
          "
        continue-on-error: true
        
      - name: Send Discord Alert
        if: failure()
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK_URL }}
          status: ${{ job.status }}
          title: "üö® Website Health Check Failed"
          description: |
            **Website:** https://usalabia.com
            **Status Code:** ${{ steps.health-check.outputs.status_code }}
            **Error:** ${{ steps.health-check.outputs.error_message }}
            **Time:** ${{ github.event.schedule || 'Manual trigger' }}
            
            The website is not responding with a 200 status code after 3 attempts.
          color: 0xFF0000 # Red color
          username: "Website Monitor"
          avatar_url: "https://cdn-icons-png.flaticon.com/512/1827/1827933.png"
          
      - name: Success Notification
        if: success()
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK_URL }}
          status: ${{ job.status }}
          title: "‚úÖ Website Health Check Passed"
          description: |
            **Website:** https://usalabia.com
            **Status:** Healthy (200 OK)
            **Time:** ${{ github.event.schedule || 'Manual trigger' }}
            
            The website is responding correctly.
          color: 0x00FF00 # Green color
          username: "Website Monitor"
          avatar_url: "https://cdn-icons-png.flaticon.com/512/1827/1827933.png" 